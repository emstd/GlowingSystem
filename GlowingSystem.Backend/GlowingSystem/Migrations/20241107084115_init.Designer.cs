// <auto-generated />
using System;
using GlowingSystem.DataAccess;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Metadata;
using Microsoft.EntityFrameworkCore.Migrations;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;

#nullable disable

namespace GlowingSystem.Migrations
{
    [DbContext(typeof(GlowingSystemDbContext))]
    [Migration("20241107084115_init")]
    partial class init
    {
        /// <inheritdoc />
        protected override void BuildTargetModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "8.0.10")
                .HasAnnotation("Relational:MaxIdentifierLength", 128);

            SqlServerModelBuilderExtensions.UseIdentityColumns(modelBuilder);

            modelBuilder.Entity("GlowingSystem.DataAccess.Entities.ContractorEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("ContractorName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Contractors");

                    b.HasData(
                        new
                        {
                            Id = new Guid("b6d1cdf7-7eea-4524-a524-ff50f40a981b"),
                            ContractorName = "GenialSolutions"
                        },
                        new
                        {
                            Id = new Guid("d62ae88b-9c70-4707-8620-1fc44b85ecdf"),
                            ContractorName = "VeryFastSolutions"
                        });
                });

            modelBuilder.Entity("GlowingSystem.DataAccess.Entities.CustomerEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("CustomerName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.ToTable("Customers");

                    b.HasData(
                        new
                        {
                            Id = new Guid("02ac74f4-5bd6-49e3-ab8e-5c817b665eb9"),
                            CustomerName = "Yanbex"
                        },
                        new
                        {
                            Id = new Guid("39156042-6faf-45f3-b0e9-65f0c1b34ecd"),
                            CustomerName = "Goodle"
                        },
                        new
                        {
                            Id = new Guid("a3f97ff5-f4e9-48a1-a7eb-d84f0c48c460"),
                            CustomerName = "Ramdler"
                        });
                });

            modelBuilder.Entity("GlowingSystem.DataAccess.Entities.EmployeeEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("Email")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("FirstName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<bool>("IsManager")
                        .HasColumnType("bit");

                    b.Property<string>("LastName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<string>("Surname")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.HasKey("Id");

                    b.HasIndex("Email")
                        .IsUnique();

                    b.ToTable("Employees");

                    b.HasData(
                        new
                        {
                            Id = new Guid("36abacc7-45d1-48b5-8b70-30892e24c3d9"),
                            Email = "petr@gmail.com",
                            FirstName = "Петр",
                            IsManager = true,
                            LastName = "Петров",
                            Surname = "Петрович"
                        },
                        new
                        {
                            Id = new Guid("ca7744f2-77f0-4cc6-982d-2bb904a43bf3"),
                            Email = "ivan@gmail.com",
                            FirstName = "Иван",
                            IsManager = true,
                            LastName = "Иванов",
                            Surname = "Иванович"
                        },
                        new
                        {
                            Id = new Guid("2d27d4d3-82d9-438f-bdbd-a863eb6e5815"),
                            Email = "andrey@gmail.com",
                            FirstName = "Андрей",
                            IsManager = false,
                            LastName = "Андреев",
                            Surname = "Андреевич"
                        },
                        new
                        {
                            Id = new Guid("d0a926b8-8272-4e91-95de-2ed54dc14889"),
                            Email = "alex@gmail.com",
                            FirstName = "Алексей",
                            IsManager = false,
                            LastName = "Алексеев",
                            Surname = "Алексеевич"
                        });
                });

            modelBuilder.Entity("GlowingSystem.DataAccess.Entities.EmployeeProject", b =>
                {
                    b.Property<Guid>("EmployeeId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ProjectId")
                        .HasColumnType("uniqueidentifier");

                    b.HasKey("EmployeeId", "ProjectId");

                    b.HasIndex("ProjectId");

                    b.ToTable("EmployeeProject");

                    b.HasData(
                        new
                        {
                            EmployeeId = new Guid("36abacc7-45d1-48b5-8b70-30892e24c3d9"),
                            ProjectId = new Guid("0461d05b-fecd-49ee-aa36-d8ae9252f89d")
                        },
                        new
                        {
                            EmployeeId = new Guid("2d27d4d3-82d9-438f-bdbd-a863eb6e5815"),
                            ProjectId = new Guid("0461d05b-fecd-49ee-aa36-d8ae9252f89d")
                        },
                        new
                        {
                            EmployeeId = new Guid("ca7744f2-77f0-4cc6-982d-2bb904a43bf3"),
                            ProjectId = new Guid("b9f15649-3b79-4773-9ec7-65f249cc9095")
                        },
                        new
                        {
                            EmployeeId = new Guid("d0a926b8-8272-4e91-95de-2ed54dc14889"),
                            ProjectId = new Guid("b9f15649-3b79-4773-9ec7-65f249cc9095")
                        },
                        new
                        {
                            EmployeeId = new Guid("36abacc7-45d1-48b5-8b70-30892e24c3d9"),
                            ProjectId = new Guid("a3927bc2-4c76-4c2e-98f2-d06b422cb612")
                        },
                        new
                        {
                            EmployeeId = new Guid("d0a926b8-8272-4e91-95de-2ed54dc14889"),
                            ProjectId = new Guid("a3927bc2-4c76-4c2e-98f2-d06b422cb612")
                        },
                        new
                        {
                            EmployeeId = new Guid("36abacc7-45d1-48b5-8b70-30892e24c3d9"),
                            ProjectId = new Guid("99711a37-b15e-4f05-82e8-3dfc38b39fe0")
                        });
                });

            modelBuilder.Entity("GlowingSystem.DataAccess.Entities.ProjectEntity", b =>
                {
                    b.Property<Guid>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("ContractorId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<Guid>("CustomerId")
                        .HasColumnType("uniqueidentifier");

                    b.Property<string>("EmployeesIds")
                        .HasColumnType("nvarchar(max)");

                    b.Property<DateTime?>("EndDate")
                        .HasColumnType("DATE");

                    b.Property<int>("Priority")
                        .HasColumnType("int");

                    b.Property<string>("ProjectName")
                        .IsRequired()
                        .HasMaxLength(50)
                        .HasColumnType("nvarchar(50)");

                    b.Property<DateTime>("StartDate")
                        .HasColumnType("DATE");

                    b.HasKey("Id");

                    b.HasIndex("ContractorId");

                    b.HasIndex("CustomerId");

                    b.HasIndex("ProjectName")
                        .IsUnique();

                    b.ToTable("Projects");

                    b.HasData(
                        new
                        {
                            Id = new Guid("0461d05b-fecd-49ee-aa36-d8ae9252f89d"),
                            ContractorId = new Guid("b6d1cdf7-7eea-4524-a524-ff50f40a981b"),
                            CustomerId = new Guid("02ac74f4-5bd6-49e3-ab8e-5c817b665eb9"),
                            EndDate = new DateTime(2024, 5, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = 0,
                            ProjectName = "miniature-lamp",
                            StartDate = new DateTime(2024, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("b9f15649-3b79-4773-9ec7-65f249cc9095"),
                            ContractorId = new Guid("d62ae88b-9c70-4707-8620-1fc44b85ecdf"),
                            CustomerId = new Guid("39156042-6faf-45f3-b0e9-65f0c1b34ecd"),
                            EndDate = new DateTime(2024, 9, 12, 0, 0, 0, 0, DateTimeKind.Unspecified),
                            Priority = 0,
                            ProjectName = "congenial-waffle",
                            StartDate = new DateTime(2024, 4, 20, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("a3927bc2-4c76-4c2e-98f2-d06b422cb612"),
                            ContractorId = new Guid("b6d1cdf7-7eea-4524-a524-ff50f40a981b"),
                            CustomerId = new Guid("a3f97ff5-f4e9-48a1-a7eb-d84f0c48c460"),
                            Priority = 1,
                            ProjectName = "congenial-octo-memory",
                            StartDate = new DateTime(2024, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        },
                        new
                        {
                            Id = new Guid("99711a37-b15e-4f05-82e8-3dfc38b39fe0"),
                            ContractorId = new Guid("d62ae88b-9c70-4707-8620-1fc44b85ecdf"),
                            CustomerId = new Guid("02ac74f4-5bd6-49e3-ab8e-5c817b665eb9"),
                            Priority = 1,
                            ProjectName = "studious-doodle",
                            StartDate = new DateTime(2024, 3, 23, 0, 0, 0, 0, DateTimeKind.Unspecified)
                        });
                });

            modelBuilder.Entity("GlowingSystem.DataAccess.Entities.EmployeeProject", b =>
                {
                    b.HasOne("GlowingSystem.DataAccess.Entities.EmployeeEntity", "Employee")
                        .WithMany("EmployeeProject")
                        .HasForeignKey("EmployeeId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlowingSystem.DataAccess.Entities.ProjectEntity", "Project")
                        .WithMany("EmployeeProject")
                        .HasForeignKey("ProjectId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Employee");

                    b.Navigation("Project");
                });

            modelBuilder.Entity("GlowingSystem.DataAccess.Entities.ProjectEntity", b =>
                {
                    b.HasOne("GlowingSystem.DataAccess.Entities.ContractorEntity", "Contractor")
                        .WithMany()
                        .HasForeignKey("ContractorId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.HasOne("GlowingSystem.DataAccess.Entities.CustomerEntity", "Customer")
                        .WithMany()
                        .HasForeignKey("CustomerId")
                        .OnDelete(DeleteBehavior.Cascade)
                        .IsRequired();

                    b.Navigation("Contractor");

                    b.Navigation("Customer");
                });

            modelBuilder.Entity("GlowingSystem.DataAccess.Entities.EmployeeEntity", b =>
                {
                    b.Navigation("EmployeeProject");
                });

            modelBuilder.Entity("GlowingSystem.DataAccess.Entities.ProjectEntity", b =>
                {
                    b.Navigation("EmployeeProject");
                });
#pragma warning restore 612, 618
        }
    }
}
